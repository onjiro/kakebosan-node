generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounting_entries {
  id             Int                     @id @default(autoincrement())
  user           users                   @relation(fields: [user_id], references: [id])
  user_id        Int
  transaction    accounting_transactions @relation(fields: [transaction_id], references: [id])
  transaction_id Int
  side_id        Int
  item           accounting_items        @relation(fields: [item_id], references: [id])
  item_id        Int
  amount         Int
  created_at     DateTime                @default(now()) @db.Timestamp(6)
  updated_at     DateTime                @updatedAt @db.Timestamp(6)

  @@index([item_id], map: "index_accounting_entries_on_item_id")
  @@index([side_id], map: "index_accounting_entries_on_side_id")
  @@index([transaction_id], map: "index_accounting_entries_on_transaction_id")
  @@index([user_id], map: "index_accounting_entries_on_user_id")
  @@index([user_id, item_id, side_id], map: "index_accounting_entries_on_user_id_and_item_id_and_side_id")
}

model accounting_items {
  id                       Int                  @id @default(autoincrement())
  user                     users                @relation(fields: [user_id], references: [id])
  user_id                  Int
  name                     String               @db.VarChar(255)
  type                     accounting_types     @relation(fields: [type_id], references: [id])
  type_id                  Int
  description              String               @db.VarChar(255)
  created_at               DateTime             @default(now()) @db.Timestamp(6)
  updated_at               DateTime             @updatedAt @db.Timestamp(6)
  selectable               Boolean              @default(true)
  entries                  accounting_entries[]
  settingUsingAsDebitItem  inventory_settings?  @relation("debitItem")
  settingUsingAsCreditItem inventory_settings?  @relation("creditItem")

  @@index([type_id], map: "index_accounting_items_on_type_id")
  @@index([user_id], map: "index_accounting_items_on_user_id")
}

model accounting_transactions {
  id          Int                  @id @default(autoincrement())
  user        users                @relation(fields: [user_id], references: [id])
  user_id     Int
  date        DateTime             @db.Timestamp(6)
  description String?              @db.VarChar(255)
  created_at  DateTime             @default(now()) @db.Timestamp(6)
  updated_at  DateTime             @updatedAt @db.Timestamp(6)
  entries     accounting_entries[]

  @@index([date], map: "index_accounting_transactions_on_date")
  @@index([user_id], map: "index_accounting_transactions_on_user_id")
}

model accounting_types {
  id         Int                @id @default(autoincrement())
  name       String             @db.VarChar(255)
  side_id    Int
  deleted_at DateTime?          @db.Timestamp(6)
  created_at DateTime           @default(now()) @db.Timestamp(6)
  updated_at DateTime           @updatedAt @db.Timestamp(6)
  items      accounting_items[]

  @@index([side_id], map: "index_accounting_types_on_side_id")
}

model inventory_settings {
  user_id        Int              @id
  debitItem      accounting_items @relation("debitItem", fields: [debit_item_id], references: [id])
  debit_item_id  Int              @unique
  creditItem     accounting_items @relation("creditItem", fields: [credit_item_id], references: [id])
  credit_item_id Int              @unique
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @updatedAt @db.Timestamp(6)
}

model users {
  id           Int                       @id @default(autoincrement())
  provider     String                    @db.VarChar(255)
  uid          String                    @db.VarChar(255)
  name         String?                   @db.VarChar(255)
  image_url    String?                   @db.VarChar(255)
  email        String?                   @db.VarChar(255)
  access_token String?                   @db.VarChar(255)
  created_at   DateTime                  @default(now()) @db.Timestamp(6)
  updated_at   DateTime                  @updatedAt @db.Timestamp(6)
  items        accounting_items[]
  transactions accounting_transactions[]
  entries      accounting_entries[]

  @@unique([provider, uid])
}
